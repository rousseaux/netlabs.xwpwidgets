###############################################################################
# GenFiles.mif -- Generate Files                                  [usbwidget] #
# --------------------------------------------------------------------------- #
# o Bldvars.h         ; Build Variables in include-format                     #
# o usbshlpr.def      ; Module Definition File for the Daemon                 #
# o usbshold.def      ; Module Definition File for the Widget                 #
# o Makefile.bldenv   ; Overview of the NMake build-environment               #
###############################################################################

# =============================================================================
#                                                  [ GENERATE BUILD VARIABLES ]
# =============================================================================
Bldvars.h: Bldvars.mif
	@echo ## Generating Build Variables ##
	@type nul > $@
	@echo /* $@ -- Build Variables generated from $? */ >> $@
	@echo #define VENDOR_STR "$(VENDOR)" >> $@
	@echo #define VERSION_MAJOR $(VERSION_MAJOR) >> $@
	@echo #define VERSION_MAJOR_STR "$(VERSION_MAJOR)" >> $@
	@echo #define VERSION_MIDDLE $(VERSION_MIDDLE) >> $@
	@echo #define VERSION_MIDDLE_STR "$(VERSION_MIDDLE)" >> $@
	@echo #define VERSION_MINOR $(VERSION_MINOR) >> $@
	@echo #define VERSION_MINOR_STR "$(VERSION_MINOR)" >> $@
	@echo #define BLD_YEAR $(BLD_YEAR) >> $@
	@echo #define BLD_YEAR_STR "$(BLD_YEAR)" >> $@
	@echo #define BLD_MONTH $(BLD_MONTH) >> $@
	@echo #define BLD_MONTH_STR "$(BLD_MONTH)" >> $@
	@echo #define BLD_DAY $(BLD_DAY) >> $@
	@echo #define BLD_DAY_STR "$(BLD_DAY)" >> $@
	@echo #define BLD_HOURS $(BLD_HOURS) >> $@
	@echo #define BLD_HOURS_STR "$(BLD_HOURS)" >> $@
	@echo #define BLD_MINUTES $(BLD_MINUTES) >> $@
	@echo #define BLD_MINUTES_STR "$(BLD_MINUTES)" >> $@
	@echo #define BLD_SECONDS $(BLD_SECONDS) >> $@
	@echo #define BLD_SECONDS_STR "$(BLD_SECONDS)" >> $@
	@echo #define BLD_MACHINE_STR "$(BLD_MACHINE)" >> $@
	@echo #define BLD_LANGUAGE_STR "$(BLD_LANGUAGE)" >> $@
	@echo #define BLD_VERSION_STR "v$(VERSION_MAJOR).$(VERSION_MIDDLE).$(VERSION_MINOR)" >> $@
	@echo #define BLD_INFO_STR "testbuild-$(BLD_YEAR)$(BLD_MONTH)$(BLD_DAY)" >> $@
	@echo #define DAEMON_DESCRIPTION_STR "$(DAEMON_DESCRIPTION)" >> $@
	@echo #define WIDGET_DESCRIPTION_STR "$(WIDGET_DESCRIPTION)" >> $@
	@type nul > $*.rexx
	@echo /* $*.rexx -- Build Info generated from $? */ >> $*.rexx
	@echo return "testbuild-$(BLD_YEAR)$(BLD_MONTH)$(BLD_DAY)" >> $*.rexx

# =============================================================================
#                                           [ GENERATE MODULE DEFINITION FILE ]
# =============================================================================
usbshlpr.def: Bldvars.h
	@echo.
	@echo ## Generating '$@' ##
	@type nul> $@
	@echo ;##############################################################################>> $@
	@echo ;# usbshlpr.def -- Module Definition generated from Bldvars.mif               #>> $@
	@echo ;# -------------------------------------------------------------------------- #>> $@
	@echo ;# This is the Module Definition file for the USBSHLPR.EXE DAEMON.            #>> $@
	@echo ;# The DAEMON provides named shared memory to the Widget.                     #>> $@
	@echo ;# It's .EXE extension is renamed to .DMN to prevent simple user execution.   #>> $@
	@echo ;##############################################################################>> $@
	@echo.>> $@
	@echo NAME $* WINDOWCOMPAT>> $@
	@echo Description '$(DAEMON_DESCRIPTION) [testbuild-$(BLD_YEAR)$(BLD_MONTH)$(BLD_DAY)]'>> $@
	@echo PROTMODE>> $@
	@echo.>> $@
	@echo DATA    MULTIPLE READWRITE LOADONCALL NONSHARED>> $@
	@echo CODE    LOADONCALL>> $@

# =============================================================================
#                                           [ GENERATE MODULE DEFINITION FILE ]
# =============================================================================
usbshold.def: Bldvars.h
	@echo.
	@echo ## Generating '$@' ##
	@type nul> $@
	@echo ;##############################################################################>> $@
	@echo ;# usbshold.def -- Module Definition generated from Bldvars.mif               #>> $@
	@echo ;# -------------------------------------------------------------------------- #>> $@
	@echo ;# This is the Module Definition file for the USBSHOLD.DLL target.            #>> $@
	@echo ;# It declares the entrypoints called by eCenter.                             #>> $@
	@echo ;# Note that this module is loaded, and these entrypoints called, even when   #>> $@
	@echo ;# the Widget is not active in the eCenter. Adding and removing the Widget    #>> $@
	@echo ;# causes Widget Window creation and destruction, not DLL loading / unloading.#>> $@
	@echo ;##############################################################################>> $@
	@echo.>> $@
	@echo LIBRARY $* INITGLOBAL TERMGLOBAL>> $@
	@echo Description '$(WIDGET_DESCRIPTION) [testbuild-$(BLD_YEAR)$(BLD_MONTH)$(BLD_DAY)]'>> $@
	@echo PROTMODE>> $@
	@echo.>> $@
	@echo DATA    MULTIPLE READWRITE LOADONCALL NONSHARED>> $@
	@echo ;       Doesn't really matter, because the widget is only ever used>> $@
	@echo ;       in the WPS process; we use MULTIPLE NONSHARED here to reduce>> $@
	@echo ;       the amount of shared memory that is needed for the DLL.>> $@
	@echo.>> $@
	@echo CODE    LOADONCALL>> $@
	@echo.>> $@
	@echo EXPORTS>> $@
	@echo ; ALIAS             =   REALNAME                ORDINAL>> $@
	@echo ; -----                 --------                ------->> $@
	@echo.>> $@
	@echo ; These three are are invoked by the eCenter.>> $@
	@echo ; They actually forward to the functions that do the actual work, so to>> $@
	@echo ; activate a different code-path, the forwarding can be changed.>> $@
	@echo.>> $@
	@echo                         UsbWgtInitModule        @1>> $@
	@echo                         UsbWgtUnInitModule      @2>> $@
	@echo                         UsbWgtQueryVersion      @3>> $@
	@echo.>> $@
	@echo ; This is some testing with aliases>> $@
	@echo ;                        DummyExport             @20>> $@
	@echo ;Alias_01            =   WgtInitModule           @1000>> $@
	@echo ;Alias_02            =   WgtUnInitModule         @2000>> $@
	@echo ;Alias_03            =   WgtQueryVersion         @65533>> $@

# =============================================================================
#                                     [DUMMY TARGET TO DUMP BUILD ENVIRONMENT ]
# =============================================================================
dummy:

# =============================================================================
#                                                    [ DUMP BUILD ENVIRONMENT ]
# =============================================================================
dump-bldenv: Bldvars.h
	@echo ## Dumping Build Environment ##
	@if exist Makefile.bldenv del Makefile.bldenv
	@echo !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! >> Makefile.bldenv
	@echo !! This file is generated by the Make utility !! >> Makefile.bldenv
	@echo !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! >> Makefile.bldenv
#	@echo. | date >> Makefile.bldenv
#	@echo. | sed "s/.*/\n/"|date|sed "/Enter/d;s/Current date is/Generated at/" >> Makefile.bldenv
	@if exist Makefile.bldenv.err del Makefile.bldenv.err
	@echo !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! >> Makefile.bldenv.err
	@echo !! This file is generated by the Make utility !! >> Makefile.bldenv.err
	@echo !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! >> Makefile.bldenv.err
#	@echo. | date >> Makefile.bldenv.err
	$(MAKE) -nologo -p dummy 1>> Makefile.bldenv 2>> Makefile.bldenv.err
	@echo.
